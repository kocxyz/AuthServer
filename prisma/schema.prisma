generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model csmembers {
  userid     BigInt
  twitchname String
  color      String  @db.VarChar(7)
  live       Boolean @default(false)
  server     Int?

  @@id([userid, twitchname], map: "ccmembers_pkey")
}

model keys {
  dcid        BigInt   @id
  srvid       BigInt
  generatedat DateTime @db.Timestamp(6)
  key         String
  public      Boolean  @default(true)

  @@unique([dcid, srvid], map: "prkeys")
}

model servers {
  id         Int              @id @unique(map: "id")
  status     String?
  name       String
  ip         String
  region     String?
  maxplayers Int?             @default(0)
  owner      BigInt?
  members    user_on_server[]

  @@map("servers")
}

model users {
  id           BigInt           @id
  username     String
  registeredat DateTime?        @db.Timestamp(6)
  lastlogin    DateTime?        @db.Timestamp(6)
  tokencreated DateTime?        @db.Timestamp(6)
  authtoken    String?
  banned       Boolean          @default(false)
  premium      Int              @default(0)
  color        String?          @db.VarChar(7)
  playtime     Int              @default(0)
  servers      user_on_server[]

  @@map("users")
}

model user_on_server {
  serverID Int
  userID   BigInt
  velanID  BigInt
  server   servers @relation(fields: [serverID], references: [id])
  user     users   @relation(fields: [userID], references: [id])

  @@id([serverID, userID, velanID], map: "server_members_pkey1")
  @@unique([serverID, userID, velanID], map: "server_members_pkey")
  @@map("server_members")
}
